/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AddressResponse } from '../models/address-response';
import { createAddress } from '../fn/address-controller/create-address';
import { CreateAddress$Params } from '../fn/address-controller/create-address';
import { getAllAddresses } from '../fn/address-controller/get-all-addresses';
import { GetAllAddresses$Params } from '../fn/address-controller/get-all-addresses';

@Injectable({ providedIn: 'root' })
export class AddressControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `createAddress()` */
  static readonly CreateAddressPath = '/api/v1/addresses/create-address';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createAddress()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createAddress$Response(params: CreateAddress$Params, context?: HttpContext): Observable<StrictHttpResponse<AddressResponse>> {
    return createAddress(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createAddress$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createAddress(params: CreateAddress$Params, context?: HttpContext): Observable<AddressResponse> {
    return this.createAddress$Response(params, context).pipe(
      map((r: StrictHttpResponse<AddressResponse>): AddressResponse => r.body)
    );
  }

  /** Path part for operation `getAllAddresses()` */
  static readonly GetAllAddressesPath = '/api/v1/addresses/get-all-addresses';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllAddresses()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllAddresses$Response(params?: GetAllAddresses$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<AddressResponse>>> {
    return getAllAddresses(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllAddresses$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllAddresses(params?: GetAllAddresses$Params, context?: HttpContext): Observable<Array<AddressResponse>> {
    return this.getAllAddresses$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<AddressResponse>>): Array<AddressResponse> => r.body)
    );
  }

}
